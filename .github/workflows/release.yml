name: Release

on:
  push:
    branches:
      - "*"
    tags:
      - v*

permissions:
  contents: read

env:
  # Common versions
  GO_VERSION: "1.24"
  GOLANGCI_VERSION: "v2.0"
  STATICCHECK_VERSION: "2025.1"

jobs:
  Test:
    name: check Code...
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        step: [vet, test]
    steps:
      - uses: actions/checkout@v4
      - name: ${{ matrix.step }}
        uses: ./.github/actions/taskfile
        with:
          go-version: ${{ env.GO_VERSION }}
          command: ${{ matrix.step }}

  Staticchecks:
    name: check static-code
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: golangci-lint
        uses: ./.github/actions/golangci
        with:
          version: ${{ env.GOLANGCI_VERSION }}
      - name: staticcheck
        uses: ./.github/actions/staticcheck
        with:
          version: ${{ env.STATICCHECK_VERSION }}

  GitLeaks:
    name: gitleaks
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs:
      - Test
      - Staticchecks
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v4
      - uses: arduino/setup-task@v1
      - run: task build

  trivy:
    name: Security
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
    - uses: actions/checkout@v4
    - uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: 'fs'
        scan-ref: '.'

  goreleaser-check:
    name: "goreleaser check"
    runs-on: ubuntu-latest
    continue-on-error: true
    needs:
      - build
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v4
      - uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: check

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - goreleaser-check
      - trivy
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # - name: Login to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USER }}
      #     password: ${{ secrets.DOCKERHUB_SECRET }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
