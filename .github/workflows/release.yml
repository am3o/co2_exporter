name: Release

on:
  push:
    branches:
      - "*"
    tags:
      - v*

permissions:
  contents: read

env:
  # Common versions
  GO_VERSION: "1.24"
  GOLANGCI_VERSION: "v2.0"
  STATICCHECK_VERSION: "2025.1"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        step: [vet, test]
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v4
      - uses: arduino/setup-task@v1
      - name: ${{ matrix.step }}
        run: task ${{ matrix.step }}

  golangci:
    name: golangci
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v4
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: ${{ env.GOLANGCI_VERSION }}

  staticcheck:
    name: "staticcheck"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: dominikh/staticcheck-action@v1.3.1
        with:
          version: ${{ env.STATICCHECK_VERSION }}

  build:
    runs-on: ubuntu-latest
    needs:
      - test
      - golangci
      - staticcheck
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v4
      - uses: arduino/setup-task@v1
      - run: task build

  goreleaser-check:
    name: "goreleaser check"
    runs-on: ubuntu-latest
    continue-on-error: true
    needs:
      - build
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v4
      - uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: check

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - goreleaser-check
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # - name: Login to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USER }}
      #     password: ${{ secrets.DOCKERHUB_SECRET }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
