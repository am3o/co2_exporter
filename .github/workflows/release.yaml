name: Release

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'

permissions:
  contents: read

env:
  # Common versions
  GO_VERSION: "1.25"
  GOLANGCI_VERSION: "v2.0"

jobs:
  Test:
    name: "🗜️ check Code..."
    runs-on: ubuntu-latest
    env:
      GO11MODULE: on
    strategy:
      fail-fast: true
      matrix:
        step: [vet, test, govuln, lint, staticcheck ]
    steps:
      - uses: actions/checkout@v5
      - name: ${{ matrix.step }}
        uses: ./.github/actions/taskfile
        with:
          go-version: ${{ env.GO_VERSION }}
          command: ${{ matrix.step }}

  GitLeaks:
    name: "🗂️ gitleaks check..."
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v5
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  Build:
    name: "🔨 Building..."
    runs-on: ubuntu-latest
    needs:
      - Test
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/taskfile
        with:
          go-version: ${{ env.GO_VERSION }}
          command: build

  Security:
    name: "🔦 Security checks..."
    runs-on: ubuntu-latest
    needs:
      - Build
    steps:
    - uses: actions/checkout@v5
    - uses: aquasecurity/trivy-action@0.32.0
      with:
        scan-type: fs
        scan-ref: .
        format: table
        ignore-unfixed: true
        vuln-type: os,library
        severity: CRITICAL,HIGH

  Goreleaser-check:
    name: "🔬 relase checks..."
    runs-on: ubuntu-latest
    continue-on-error: true
    needs:
      - build
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v5
      - uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: check

  release:
    name: "📦 Relasing..."
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - Goreleaser-check
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: docker/setup-qemu-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
      - uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
